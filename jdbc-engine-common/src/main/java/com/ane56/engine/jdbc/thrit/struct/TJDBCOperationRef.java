/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ane56.engine.jdbc.thrit.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-03-29")
public class TJDBCOperationRef implements org.apache.thrift.TBase<TJDBCOperationRef, TJDBCOperationRef._Fields>, java.io.Serializable, Cloneable, Comparable<TJDBCOperationRef> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TJDBCOperationRef");

  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CATALOG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("catalogName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField OPERATION_REF_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("operationRefId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField SQL_STATEMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("sqlStatement", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField T_JDBCRESULT_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("tJDBCResultSet", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField QUERY_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("queryStatus", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("message", org.apache.thrift.protocol.TType.STRING, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TJDBCOperationRefStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TJDBCOperationRefTupleSchemeFactory();

  public long startTime; // required
  public long endTime; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String catalogName; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String operationRefId; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String sqlStatement; // required
  public @org.apache.thrift.annotation.Nullable TJDBCResultSet tJDBCResultSet; // required
  /**
   * 
   * @see com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus
   */
  public @org.apache.thrift.annotation.Nullable com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus queryStatus; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String message; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    START_TIME((short)1, "startTime"),
    END_TIME((short)2, "endTime"),
    CATALOG_NAME((short)3, "catalogName"),
    OPERATION_REF_ID((short)4, "operationRefId"),
    SQL_STATEMENT((short)5, "sqlStatement"),
    T_JDBCRESULT_SET((short)6, "tJDBCResultSet"),
    /**
     * 
     * @see com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus
     */
    QUERY_STATUS((short)7, "queryStatus"),
    MESSAGE((short)8, "message");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // START_TIME
          return START_TIME;
        case 2: // END_TIME
          return END_TIME;
        case 3: // CATALOG_NAME
          return CATALOG_NAME;
        case 4: // OPERATION_REF_ID
          return OPERATION_REF_ID;
        case 5: // SQL_STATEMENT
          return SQL_STATEMENT;
        case 6: // T_JDBCRESULT_SET
          return T_JDBCRESULT_SET;
        case 7: // QUERY_STATUS
          return QUERY_STATUS;
        case 8: // MESSAGE
          return MESSAGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STARTTIME_ISSET_ID = 0;
  private static final int __ENDTIME_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CATALOG_NAME, new org.apache.thrift.meta_data.FieldMetaData("catalogName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPERATION_REF_ID, new org.apache.thrift.meta_data.FieldMetaData("operationRefId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SQL_STATEMENT, new org.apache.thrift.meta_data.FieldMetaData("sqlStatement", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.T_JDBCRESULT_SET, new org.apache.thrift.meta_data.FieldMetaData("tJDBCResultSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "TJDBCResultSet")));
    tmpMap.put(_Fields.QUERY_STATUS, new org.apache.thrift.meta_data.FieldMetaData("queryStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus.class)));
    tmpMap.put(_Fields.MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("message", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TJDBCOperationRef.class, metaDataMap);
  }

  public TJDBCOperationRef() {
  }

  public TJDBCOperationRef(
    long startTime,
    long endTime,
    java.lang.String catalogName,
    java.lang.String operationRefId,
    java.lang.String sqlStatement,
    TJDBCResultSet tJDBCResultSet,
    com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus queryStatus,
    java.lang.String message)
  {
    this();
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.endTime = endTime;
    setEndTimeIsSet(true);
    this.catalogName = catalogName;
    this.operationRefId = operationRefId;
    this.sqlStatement = sqlStatement;
    this.tJDBCResultSet = tJDBCResultSet;
    this.queryStatus = queryStatus;
    this.message = message;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TJDBCOperationRef(TJDBCOperationRef other) {
    __isset_bitfield = other.__isset_bitfield;
    this.startTime = other.startTime;
    this.endTime = other.endTime;
    if (other.isSetCatalogName()) {
      this.catalogName = other.catalogName;
    }
    if (other.isSetOperationRefId()) {
      this.operationRefId = other.operationRefId;
    }
    if (other.isSetSqlStatement()) {
      this.sqlStatement = other.sqlStatement;
    }
    if (other.isSetTJDBCResultSet()) {
      this.tJDBCResultSet = new TJDBCResultSet(other.tJDBCResultSet);
    }
    if (other.isSetQueryStatus()) {
      this.queryStatus = other.queryStatus;
    }
    if (other.isSetMessage()) {
      this.message = other.message;
    }
  }

  public TJDBCOperationRef deepCopy() {
    return new TJDBCOperationRef(this);
  }

  @Override
  public void clear() {
    setStartTimeIsSet(false);
    this.startTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    this.catalogName = null;
    this.operationRefId = null;
    this.sqlStatement = null;
    this.tJDBCResultSet = null;
    this.queryStatus = null;
    this.message = null;
  }

  public long getStartTime() {
    return this.startTime;
  }

  public TJDBCOperationRef setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
    return this;
  }

  public void unsetStartTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  public long getEndTime() {
    return this.endTime;
  }

  public TJDBCOperationRef setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getCatalogName() {
    return this.catalogName;
  }

  public TJDBCOperationRef setCatalogName(@org.apache.thrift.annotation.Nullable java.lang.String catalogName) {
    this.catalogName = catalogName;
    return this;
  }

  public void unsetCatalogName() {
    this.catalogName = null;
  }

  /** Returns true if field catalogName is set (has been assigned a value) and false otherwise */
  public boolean isSetCatalogName() {
    return this.catalogName != null;
  }

  public void setCatalogNameIsSet(boolean value) {
    if (!value) {
      this.catalogName = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getOperationRefId() {
    return this.operationRefId;
  }

  public TJDBCOperationRef setOperationRefId(@org.apache.thrift.annotation.Nullable java.lang.String operationRefId) {
    this.operationRefId = operationRefId;
    return this;
  }

  public void unsetOperationRefId() {
    this.operationRefId = null;
  }

  /** Returns true if field operationRefId is set (has been assigned a value) and false otherwise */
  public boolean isSetOperationRefId() {
    return this.operationRefId != null;
  }

  public void setOperationRefIdIsSet(boolean value) {
    if (!value) {
      this.operationRefId = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSqlStatement() {
    return this.sqlStatement;
  }

  public TJDBCOperationRef setSqlStatement(@org.apache.thrift.annotation.Nullable java.lang.String sqlStatement) {
    this.sqlStatement = sqlStatement;
    return this;
  }

  public void unsetSqlStatement() {
    this.sqlStatement = null;
  }

  /** Returns true if field sqlStatement is set (has been assigned a value) and false otherwise */
  public boolean isSetSqlStatement() {
    return this.sqlStatement != null;
  }

  public void setSqlStatementIsSet(boolean value) {
    if (!value) {
      this.sqlStatement = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TJDBCResultSet getTJDBCResultSet() {
    return this.tJDBCResultSet;
  }

  public TJDBCOperationRef setTJDBCResultSet(@org.apache.thrift.annotation.Nullable TJDBCResultSet tJDBCResultSet) {
    this.tJDBCResultSet = tJDBCResultSet;
    return this;
  }

  public void unsetTJDBCResultSet() {
    this.tJDBCResultSet = null;
  }

  /** Returns true if field tJDBCResultSet is set (has been assigned a value) and false otherwise */
  public boolean isSetTJDBCResultSet() {
    return this.tJDBCResultSet != null;
  }

  public void setTJDBCResultSetIsSet(boolean value) {
    if (!value) {
      this.tJDBCResultSet = null;
    }
  }

  /**
   * 
   * @see com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus
   */
  @org.apache.thrift.annotation.Nullable
  public com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus getQueryStatus() {
    return this.queryStatus;
  }

  /**
   * 
   * @see com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus
   */
  public TJDBCOperationRef setQueryStatus(@org.apache.thrift.annotation.Nullable com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus queryStatus) {
    this.queryStatus = queryStatus;
    return this;
  }

  public void unsetQueryStatus() {
    this.queryStatus = null;
  }

  /** Returns true if field queryStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetQueryStatus() {
    return this.queryStatus != null;
  }

  public void setQueryStatusIsSet(boolean value) {
    if (!value) {
      this.queryStatus = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getMessage() {
    return this.message;
  }

  public TJDBCOperationRef setMessage(@org.apache.thrift.annotation.Nullable java.lang.String message) {
    this.message = message;
    return this;
  }

  public void unsetMessage() {
    this.message = null;
  }

  /** Returns true if field message is set (has been assigned a value) and false otherwise */
  public boolean isSetMessage() {
    return this.message != null;
  }

  public void setMessageIsSet(boolean value) {
    if (!value) {
      this.message = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((java.lang.Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((java.lang.Long)value);
      }
      break;

    case CATALOG_NAME:
      if (value == null) {
        unsetCatalogName();
      } else {
        setCatalogName((java.lang.String)value);
      }
      break;

    case OPERATION_REF_ID:
      if (value == null) {
        unsetOperationRefId();
      } else {
        setOperationRefId((java.lang.String)value);
      }
      break;

    case SQL_STATEMENT:
      if (value == null) {
        unsetSqlStatement();
      } else {
        setSqlStatement((java.lang.String)value);
      }
      break;

    case T_JDBCRESULT_SET:
      if (value == null) {
        unsetTJDBCResultSet();
      } else {
        setTJDBCResultSet((TJDBCResultSet)value);
      }
      break;

    case QUERY_STATUS:
      if (value == null) {
        unsetQueryStatus();
      } else {
        setQueryStatus((com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus)value);
      }
      break;

    case MESSAGE:
      if (value == null) {
        unsetMessage();
      } else {
        setMessage((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case START_TIME:
      return getStartTime();

    case END_TIME:
      return getEndTime();

    case CATALOG_NAME:
      return getCatalogName();

    case OPERATION_REF_ID:
      return getOperationRefId();

    case SQL_STATEMENT:
      return getSqlStatement();

    case T_JDBCRESULT_SET:
      return getTJDBCResultSet();

    case QUERY_STATUS:
      return getQueryStatus();

    case MESSAGE:
      return getMessage();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case CATALOG_NAME:
      return isSetCatalogName();
    case OPERATION_REF_ID:
      return isSetOperationRefId();
    case SQL_STATEMENT:
      return isSetSqlStatement();
    case T_JDBCRESULT_SET:
      return isSetTJDBCResultSet();
    case QUERY_STATUS:
      return isSetQueryStatus();
    case MESSAGE:
      return isSetMessage();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TJDBCOperationRef)
      return this.equals((TJDBCOperationRef)that);
    return false;
  }

  public boolean equals(TJDBCOperationRef that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_endTime = true;
    boolean that_present_endTime = true;
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_catalogName = true && this.isSetCatalogName();
    boolean that_present_catalogName = true && that.isSetCatalogName();
    if (this_present_catalogName || that_present_catalogName) {
      if (!(this_present_catalogName && that_present_catalogName))
        return false;
      if (!this.catalogName.equals(that.catalogName))
        return false;
    }

    boolean this_present_operationRefId = true && this.isSetOperationRefId();
    boolean that_present_operationRefId = true && that.isSetOperationRefId();
    if (this_present_operationRefId || that_present_operationRefId) {
      if (!(this_present_operationRefId && that_present_operationRefId))
        return false;
      if (!this.operationRefId.equals(that.operationRefId))
        return false;
    }

    boolean this_present_sqlStatement = true && this.isSetSqlStatement();
    boolean that_present_sqlStatement = true && that.isSetSqlStatement();
    if (this_present_sqlStatement || that_present_sqlStatement) {
      if (!(this_present_sqlStatement && that_present_sqlStatement))
        return false;
      if (!this.sqlStatement.equals(that.sqlStatement))
        return false;
    }

    boolean this_present_tJDBCResultSet = true && this.isSetTJDBCResultSet();
    boolean that_present_tJDBCResultSet = true && that.isSetTJDBCResultSet();
    if (this_present_tJDBCResultSet || that_present_tJDBCResultSet) {
      if (!(this_present_tJDBCResultSet && that_present_tJDBCResultSet))
        return false;
      if (!this.tJDBCResultSet.equals(that.tJDBCResultSet))
        return false;
    }

    boolean this_present_queryStatus = true && this.isSetQueryStatus();
    boolean that_present_queryStatus = true && that.isSetQueryStatus();
    if (this_present_queryStatus || that_present_queryStatus) {
      if (!(this_present_queryStatus && that_present_queryStatus))
        return false;
      if (!this.queryStatus.equals(that.queryStatus))
        return false;
    }

    boolean this_present_message = true && this.isSetMessage();
    boolean that_present_message = true && that.isSetMessage();
    if (this_present_message || that_present_message) {
      if (!(this_present_message && that_present_message))
        return false;
      if (!this.message.equals(that.message))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(startTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(endTime);

    hashCode = hashCode * 8191 + ((isSetCatalogName()) ? 131071 : 524287);
    if (isSetCatalogName())
      hashCode = hashCode * 8191 + catalogName.hashCode();

    hashCode = hashCode * 8191 + ((isSetOperationRefId()) ? 131071 : 524287);
    if (isSetOperationRefId())
      hashCode = hashCode * 8191 + operationRefId.hashCode();

    hashCode = hashCode * 8191 + ((isSetSqlStatement()) ? 131071 : 524287);
    if (isSetSqlStatement())
      hashCode = hashCode * 8191 + sqlStatement.hashCode();

    hashCode = hashCode * 8191 + ((isSetTJDBCResultSet()) ? 131071 : 524287);
    if (isSetTJDBCResultSet())
      hashCode = hashCode * 8191 + tJDBCResultSet.hashCode();

    hashCode = hashCode * 8191 + ((isSetQueryStatus()) ? 131071 : 524287);
    if (isSetQueryStatus())
      hashCode = hashCode * 8191 + queryStatus.getValue();

    hashCode = hashCode * 8191 + ((isSetMessage()) ? 131071 : 524287);
    if (isSetMessage())
      hashCode = hashCode * 8191 + message.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TJDBCOperationRef other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetStartTime(), other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetEndTime(), other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCatalogName(), other.isSetCatalogName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCatalogName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.catalogName, other.catalogName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOperationRefId(), other.isSetOperationRefId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperationRefId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operationRefId, other.operationRefId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSqlStatement(), other.isSetSqlStatement());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSqlStatement()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sqlStatement, other.sqlStatement);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTJDBCResultSet(), other.isSetTJDBCResultSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTJDBCResultSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tJDBCResultSet, other.tJDBCResultSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetQueryStatus(), other.isSetQueryStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQueryStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryStatus, other.queryStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetMessage(), other.isSetMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.message, other.message);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TJDBCOperationRef(");
    boolean first = true;

    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    sb.append(this.endTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("catalogName:");
    if (this.catalogName == null) {
      sb.append("null");
    } else {
      sb.append(this.catalogName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("operationRefId:");
    if (this.operationRefId == null) {
      sb.append("null");
    } else {
      sb.append(this.operationRefId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sqlStatement:");
    if (this.sqlStatement == null) {
      sb.append("null");
    } else {
      sb.append(this.sqlStatement);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("tJDBCResultSet:");
    if (this.tJDBCResultSet == null) {
      sb.append("null");
    } else {
      sb.append(this.tJDBCResultSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("queryStatus:");
    if (this.queryStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.queryStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("message:");
    if (this.message == null) {
      sb.append("null");
    } else {
      sb.append(this.message);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TJDBCOperationRefStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TJDBCOperationRefStandardScheme getScheme() {
      return new TJDBCOperationRefStandardScheme();
    }
  }

  private static class TJDBCOperationRefStandardScheme extends org.apache.thrift.scheme.StandardScheme<TJDBCOperationRef> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TJDBCOperationRef struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CATALOG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.catalogName = iprot.readString();
              struct.setCatalogNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // OPERATION_REF_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.operationRefId = iprot.readString();
              struct.setOperationRefIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SQL_STATEMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sqlStatement = iprot.readString();
              struct.setSqlStatementIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // T_JDBCRESULT_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.tJDBCResultSet = new TJDBCResultSet();
              struct.tJDBCResultSet.read(iprot);
              struct.setTJDBCResultSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // QUERY_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.queryStatus = com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus.findByValue(iprot.readI32());
              struct.setQueryStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.message = iprot.readString();
              struct.setMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TJDBCOperationRef struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeI64(struct.endTime);
      oprot.writeFieldEnd();
      if (struct.catalogName != null) {
        oprot.writeFieldBegin(CATALOG_NAME_FIELD_DESC);
        oprot.writeString(struct.catalogName);
        oprot.writeFieldEnd();
      }
      if (struct.operationRefId != null) {
        oprot.writeFieldBegin(OPERATION_REF_ID_FIELD_DESC);
        oprot.writeString(struct.operationRefId);
        oprot.writeFieldEnd();
      }
      if (struct.sqlStatement != null) {
        oprot.writeFieldBegin(SQL_STATEMENT_FIELD_DESC);
        oprot.writeString(struct.sqlStatement);
        oprot.writeFieldEnd();
      }
      if (struct.tJDBCResultSet != null) {
        oprot.writeFieldBegin(T_JDBCRESULT_SET_FIELD_DESC);
        struct.tJDBCResultSet.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.queryStatus != null) {
        oprot.writeFieldBegin(QUERY_STATUS_FIELD_DESC);
        oprot.writeI32(struct.queryStatus.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.message != null) {
        oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
        oprot.writeString(struct.message);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TJDBCOperationRefTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TJDBCOperationRefTupleScheme getScheme() {
      return new TJDBCOperationRefTupleScheme();
    }
  }

  private static class TJDBCOperationRefTupleScheme extends org.apache.thrift.scheme.TupleScheme<TJDBCOperationRef> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TJDBCOperationRef struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetStartTime()) {
        optionals.set(0);
      }
      if (struct.isSetEndTime()) {
        optionals.set(1);
      }
      if (struct.isSetCatalogName()) {
        optionals.set(2);
      }
      if (struct.isSetOperationRefId()) {
        optionals.set(3);
      }
      if (struct.isSetSqlStatement()) {
        optionals.set(4);
      }
      if (struct.isSetTJDBCResultSet()) {
        optionals.set(5);
      }
      if (struct.isSetQueryStatus()) {
        optionals.set(6);
      }
      if (struct.isSetMessage()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetCatalogName()) {
        oprot.writeString(struct.catalogName);
      }
      if (struct.isSetOperationRefId()) {
        oprot.writeString(struct.operationRefId);
      }
      if (struct.isSetSqlStatement()) {
        oprot.writeString(struct.sqlStatement);
      }
      if (struct.isSetTJDBCResultSet()) {
        struct.tJDBCResultSet.write(oprot);
      }
      if (struct.isSetQueryStatus()) {
        oprot.writeI32(struct.queryStatus.getValue());
      }
      if (struct.isSetMessage()) {
        oprot.writeString(struct.message);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TJDBCOperationRef struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.catalogName = iprot.readString();
        struct.setCatalogNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.operationRefId = iprot.readString();
        struct.setOperationRefIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.sqlStatement = iprot.readString();
        struct.setSqlStatementIsSet(true);
      }
      if (incoming.get(5)) {
        struct.tJDBCResultSet = new TJDBCResultSet();
        struct.tJDBCResultSet.read(iprot);
        struct.setTJDBCResultSetIsSet(true);
      }
      if (incoming.get(6)) {
        struct.queryStatus = com.ane56.engine.jdbc.thrit.enumeration.TJDBCQueryStatus.findByValue(iprot.readI32());
        struct.setQueryStatusIsSet(true);
      }
      if (incoming.get(7)) {
        struct.message = iprot.readString();
        struct.setMessageIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

