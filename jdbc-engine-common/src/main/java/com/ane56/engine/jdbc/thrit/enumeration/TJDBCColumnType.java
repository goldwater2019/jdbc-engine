/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ane56.engine.jdbc.thrit.enumeration;


@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-03-31")
public enum TJDBCColumnType implements org.apache.thrift.TEnum {
  BIT(-7),
  TINYINT(-6),
  SMALLINT(5),
  INTEGER(4),
  BIGINT(-5),
  FLOAT(6),
  REAL(7),
  DOUBLE(8),
  NUMERIC(2),
  DECIMAL(3),
  CHAR(1),
  VARCHAR(12),
  LONGVARCHAR(-1),
  DATE(91),
  TIME(92),
  TIMESTAMP(93),
  BINARY(-2),
  VARBINARY(-3),
  LONGVARBINARY(-4),
  NULL(0),
  STRUCT(2002),
  ARRAY(2003),
  BOOLEAN(16),
  LONGNVARCHAR(-16),
  OTHER(1111);

  private final int value;

  private TJDBCColumnType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  @org.apache.thrift.annotation.Nullable
  public static TJDBCColumnType findByValue(int value) { 
    switch (value) {
      case -7:
        return BIT;
      case -6:
        return TINYINT;
      case 5:
        return SMALLINT;
      case 4:
        return INTEGER;
      case -5:
        return BIGINT;
      case 6:
        return FLOAT;
      case 7:
        return REAL;
      case 8:
        return DOUBLE;
      case 2:
        return NUMERIC;
      case 3:
        return DECIMAL;
      case 1:
        return CHAR;
      case 12:
        return VARCHAR;
      case -1:
        return LONGVARCHAR;
      case 91:
        return DATE;
      case 92:
        return TIME;
      case 93:
        return TIMESTAMP;
      case -2:
        return BINARY;
      case -3:
        return VARBINARY;
      case -4:
        return LONGVARBINARY;
      case 0:
        return NULL;
      case 2002:
        return STRUCT;
      case 2003:
        return ARRAY;
      case 16:
        return BOOLEAN;
      case -16:
        return LONGNVARCHAR;
      case 1111:
        return OTHER;
      default:
        return null;
    }
  }
}
